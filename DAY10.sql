-- Day 10

-- CRUD
-- 응용 프로그램에서의 데이터 처리 기능
-- C : INSERT
-- R : SELECT
-- U : UPDATE
-- D : DELETE

-- TCL
-- 트랜잭션을 제어하는 명령어
-- 트랜잭션 : 데이터 가공 서비스 로직을 수행하기 위한 일의 최소 단위
-- COMMIT : 데이터를 처리한 과정을 실제 데이터베이스에 반영할 떄
-- ROLLBACK : 이전의 작업을 취소하고 원상태로 복귀(원복)

-- DDL(CREATE, ALTER, DROP)
-- CREATE : 데이터베이스의 객체를 생성할 때
-- TABLE, VIEW, INDEX, USER, SEQUENCE, ....
-- ALTER : 생성한 객체를 수정할 때
-- DROP : 생성한 객체의 요소(컬럼)를 삭제하거나 객체 자체를 삭제하고자 할 때

-- ALTER

SELECT * FROM DEPT_COPY;

-- DEPT_COPY에 컬럼 추가하기
ALTER TABLE DEPT_COPY 
ADD(LNAME VARCHAR2(20));

SELECT * FROM DEPT_COPY;

-- 현재 존재하는 컬럼 제거하기
ALTER TABLE DEPT_COPY
DROP COLUMN LNAME;

SELECT * FROM DEPT_COPY;

-- 컬럼을 추가하면서 기본값 적용하기
ALTER TABLE DEPT_COPY
ADD(LNAME VARCHAR2(20) DEFAULT '한국');

SELECT * FROM DEPT_COPY;

COMMIT;

-- 컬럼에 제약조건 추가하기

CREATE TABLE DEPT_COPY2
AS SELECT * FROM DEPARTMENT;

ALTER TABLE DEPT_COPY2
ADD(LNAME VARCHAR2(20) DEFAULT '한국');

SELECT * FROM DEPT_COPY2;

-- 현재 DEPT_COPY2에 기본키, DEPT_TITLE 고유값, LNAME에 필수입력 
ALTER TABLE DEPT_COPY2 
ADD CONSTRAINT PK_DEPT_COPY2 PRIMARY KEY (DEPT_ID);

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME='DEPT_COPY2';

ALTER TABLE DEPT_COPY2
ADD CONSTRAINT UQ_DEPT_COPY2 UNIQUE (DEPT_TITLE);
-- 일반적인 테이블 레벨에 설정했던 것처럼 ALTER를 사용하여 제약조건을 생성할 수 있다

-- NOT NULL은 테이블 레벨에서도 제약조건 설정이 불가능한데, ALTER 통해 수정할때도 다름
-- NOT NULL을 제약조건으로 추가할 때는 MODIFY 명령어를 사용한다
ALTER TABLE DEPT_COPY2
MODIFY LNAME CONSTRAINT NN_DEPT_COPY2 NOT NULL;

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME='DEPT_COPY2';

COMMIT;

-- 컬럼 자료형 수정하기
ALTER TABLE DEPT_COPY2
MODIFY DEPT_ID CHAR(3)
MODIFY DEPT_TITLE VARCHAR2(30)
MODIFY LOCATION_ID VARCHAR2(2)
MODIFY LNAME CHAR(20);

DESC DEPT_COPY2;

SELECT * FROM DEPT_COPY2;

-- CHAR<->VARCHAR2 서로 변환 가능
-- 컬럼의 크기도 테이블 생성 이후 변경이 가능하다
-- 컬럼의 크기는 확장할때는 문제가 없으나 축소시 반드시 들어있는 값의 크기를 확인해야한다
SELECT LENGTHB(DEPT_TITLE) FROM DEPT_COPY2;

ALTER TABLE DEPT_COPY2 MODIFY DEPT_TITLE VARCHAR2(10);

INSERT INTO DEPT_COPY2
VALUES('D0','교육부','L1',DEFAULT);

-- DEFAULT 값 변경하기   
ALTER TABLE DEPT_COPY2 MODIFY LNAME DEFAULT '미국';

INSERT INTO DEPT_COPY2 VALUES('D11','생산부','L2',DEFAULT);

SELECT * FROM DEPT_COPY2;

COMMIT;

-- 컬럼 삭제

ALTER TABLE DEPT_COPY2
DROP COLUMN LNAME;

SELECT * FROM DEPT_COPY2;

-- DDL 명령어는 트랜잭션 개념이 아닌 사용자 계정 연결에 대한 하나의 세션으로 처리를 하기 때문에 COMMIT/ROLLBACK을 할 수 없다
ROLLBACK;

-- 컬럼을 삭제시 한 테이블에 최소한 하나의 컬럼은 존재해야한다
ALTER TABLE DEPT_COPY2 DROP COLUMN DEPT_ID;
ALTER TABLE DEPT_COPY2 DROP COLUMN DEPT_TITLE;
ALTER TABLE DEPT_COPY2 DROP COLUMN LOCATION_ID;

CREATE TABLE SAMP1(
    PK NUMBER PRIMARY KEY,
    FK NUMBER REFERENCES SAMP1,
    COL1 NUMBER,
    CHECK (COL1 > 0 AND PK > 0)
);

-- 참조하는 자식 컬럼이 존재할 경우 삭제할 수 없다
ALTER TABLE SAMP1 DROP COLUMN PK;

-- CASCADE를 활용하여 제약조건과 함께 삭제가 가능하다
ALTER TABLE SAMP1
DROP COLUMN PK CASCADE CONSTRAINT;

DESC SAMP1;

SELECT * FROM SAMP1;

COMMIT;

-- 컬럼의 이름 변경하기
ALTER TABLE TEST_DELETE
RENAME COLUMN EMP_NAME TO 이름;

-- 제약조건 이름 변경하기
ALTER TABLE TEST_DELETE
ADD CONSTRAINT PK_DEPT_ID PRIMARY KEY(EMP_NO);

ALTER TABLE TEST_DELETE
RENAME CONSTRAINT PK_DEPT_ID TO PK_EMP_ID;

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME='TEST_DELETE';

-- 테이블 이름 변경하기
ALTER TABLE TEST_DELETE
RENAME TO TEST_EMPLOYEE;

--2
RENAME TEST_EMPLOYEE TO TEST_EMP;

COMMIT;




-- DROP
-- 객체의 특정 요소를 제거하거나 객체 자체를 제거하고자 할때 사용하는 구문

-- ALTER 객체 객체명 DROP 지우고자하는요소
-- DROP 객체 객체명

-- DROP (컬럼명) 도 삭제가능
ALTER TABLE DEPT_COPY DROP (LNAME);

SELECT * FROM DEPT_COPY;

ALTER TABLE DEPT_COPY DROP (DEPT_TITLE);
ALTER TABLE DEPT_COPY DROP (LOCATION_ID);

-- 제약조건을 DROP을 통해 삭제하기
CREATE TABLE CONST_TAB (
    EID CHAR(2),
    ENAME VARCHAR2(15) NOT NULL,
    EMAIL VARCHAR2(30) NOT NULL,
    AGE NUMBER NOT NULL,
    DEPT CHAR(5),
    
    CONSTRAINT PK_CONST_TAB PRIMARY KEY (EID),
    CONSTRAINT UQ_TAB_EMAIL UNIQUE (EMAIL),
    CONSTRAINT CK_TAB_AGE CHECK (AGE>0),
    CONSTRAINT FK_TAB_DEPT FOREIGN KEY (DEPT) REFERENCES DEPARTMENT(DEPT_ID) ON DELETE CASCADE
);

-- 제약조건 삭제하기
ALTER TABLE CONST_TAB
DROP CONSTRAINT CK_TAB_AGE;

-- 제약조건 여러개 삭제하기
ALTER TABLE CONST_TAB
DROP CONSTRAINT UQ_TAB_EMAIL
DROP CONSTRAINT FK_TAB_DEPT
DROP CONSTRAINT PK_CONST_TAB;

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME='CONST_TAB';

-- NOT NULL 삭제할 경우
ALTER TABLE CONST_TAB
MODIFY (ENAME NULL, EMAIL NULL, AGE NULL); 

-- 객체 삭제
DROP TABLE CONST_TAB;
DROP TABLE DEPT_COPY2;
DROP TABLE SAMP1;

COMMIT;

DROP USER SAMPLE1;
-- 사용자는 사용자를 삭제못한다 관리자는 삭제가능


-- 데이터 사전
-- 제약조건을 관리하는 데이터 사전 : USER_CONSTRAINTS
-- 제약조건을 컬럼별로 관리하는 데이터 사전 : USER_CONS_COLUMNS;
-- 테이블을 관리하는 사전 : USER_TABLES;
-- 테이블의 컬럼을 관리 : USER_TAB_COLS;
SELECT * FROM USER_TAB_COLS;


-- 현재 사용자 계정이 보유한 테이블 별 컬럼 수를 조회하시오
SELECT TABLE_NAME 보유한테이블, COUNT(*) 컬럼수
FROM USER_TAB_COLS
GROUP BY TABLE_NAME
ORDER BY 1;

-- 데이터 사전 권한에 따른 접두어
-- 1. USER_XXX : 사용자 계정(자신)이 소유한 객체나, 데이터 시스템 설정을 조회할 수 있는 데이터 사전
-- 2. ALL_XXX : 사용자 계정(자신) + 접속 권한을 부여받은, 다른 계정들의 객체정보를 조회
-- 3. DBA_XXX : 데이터베이스 관리자만 접근가능한 객체 정보들을 조회 (현재 DBMS 내의 모든 객체정보를 조회할 수 있다)

COMMIT;
